{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked"
        // ,"plugin:unicorn/recommended"
    ],
    "plugins": ["@stylistic/eslint-plugin", "unicorn"],
    "overrides": [],
    "parserOptions": {
        "project": true,
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "rules": { /* https://eslint.org/docs/latest/rules/ */ /* https://typescript-eslint.io/rules/ */
        /* To see all used rules type `npx eslint --print-config file.ts > eslintconifg.txt`, this will create a text file */
        
        "curly": ["error", "all"],
        // "eqeqeq": "warn",
        "max-statements-per-line": ["error", { "max": 2 }], //Because brace-style isn't working. So only allowed for cases like 'if (condition) { do this; }'
        "no-extra-label": "warn",
        "no-loop-func": "warn",
        "no-promise-executor-return": "error",
        "no-unused-private-class-members": "warn",
        "no-useless-concat": "warn",
        "no-var": "warn",
        "object-shorthand": ["warn", "consistent-as-needed"],
        "operator-assignment": "warn",
        "prefer-object-has-own": "warn", //No 'in' as well
       
        "@typescript-eslint/array-type": ["error", { "default": "array-simple" }], //I rather to turn it off
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/no-dynamic-delete": "off",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
        "@typescript-eslint/no-redeclare": ["error", { "builtinGlobals": true }],
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn", //Objects can be undefined, even without proper type (TS will annoy if turn it on)
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "warn",
        "@typescript-eslint/restrict-plus-operands": "warn",

        "@stylistic/brace-style": ["error", "1tbs", {"allowSingleLine": true}],
        "@stylistic/comma-dangle": ["warn", "always-multiline"],
        "@stylistic/generator-star-spacing": "error",
        "@stylistic/indent": ["error", 2, {"flatTernaryExpressions": true}],
        "@stylistic/operator-linebreak": ["error", "after"], // Maybe change
        "@stylistic/semi": "error",
        "@stylistic/space-before-function-paren": ["error", "never"],
        "@stylistic/spaced-comment": "error",
        "@stylistic/switch-colon-spacing": "error",
        "@stylistic/multiline-ternary": "error",

        "unicorn/consistent-destructuring": "off",
        "unicorn/filename-case": "off",
        "unicorn/no-array-callback-reference": "off",
        "unicorn/prevent-abbreviations": "off",
        "unicorn/switch-case-braces": "off",

        "unicorn/explicit-length-check": "error",
        "unicorn/no-negated-condition": "error",
        "unicorn/no-nested-ternary": "error",
        "unicorn/no-null": "error",
        "unicorn/numeric-separators-style": "error",
        "unicorn/prefer-includes": "error",
        "unicorn/prefer-number-properties":"error",
        "unicorn/prefer-spread": "error",
        "unicorn/prefer-string-slice": "error",
        "unicorn/prefer-switch": "error",


        "eqeqeq": "warn"
    }
}
